# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1P-IOCQgbx7DVAeX1-3c4XFRfWfgCTBkz
"""

import pandas as pd
df = pd.read_csv('titanicData.csv')
# df.head()
df.tail()
# df.columns

# Para localizar un registro por su indice, el primer registro tiene el indice 0
df.iloc[0:2]

# Muestra aleatoria. Random_state es la semilla. La distribución no necesariamente es uniforme.
df.sample(n = 100, random_state=20)

df.describe()
# Podemos ver que Age tiene Nulls porque su conteo no es el mismo, y que había un bebé.

# Vista BDD estamos generando una "vista" porque la media no existe en las tablas
# Un solo corchete es formato Series (una sola columna), dos corchetes son DF
# Según el profesor la media es el valor más probable, esto es totalmente erroneo...
df['Age'].mean()

df.mean()

# Vista BDD estamos utilizando un "select", porque la edad si existe en las tablas
# ¡Debemos ser cautos con los DF que creamos porque se almacenan e RAM! 
# Python es muy malo manejando memoria. Si borramos la VS no libera memoria
df[['Age','Pclass']]

# Un histograma muestra la distribución empírica de frecuencias 
df['Age'].hist()

# En terminos de BDD estamos usando un where
df['Survived']==1

df[df['Survived']==1]['Age'].hist()

import seaborn as sns
import pylab as plt

# Divide las columnas por los sobreviviente (cero y uno). 
# Debemos ser cuidadosos con esta función, si la VS tiene cientos de valores, tendremos cientos de gráficas
g = sns.FacetGrid(df, col = 'Survived')

# Del objeto "g" dibuja un histograma de la edad. El deafult de lso bins es 10
g.map(plt.hist, 'Fare', bins=40)

# Divide las clases por filas

g = sns.FacetGrid(df, row = 'Pclass')
g.map(plt.hist, 'Age', bins=10)

# La mayoría de las gráficas no se tienen que presentar, som simplemente exploración. 
# Presentamos las que tengan impacto. 
sns.scatterplot(x = 'Age', y = 'Fare',hue = 'Survived',data =df)

# Alpha es la transparencia. Hue es el color.
g = sns.FacetGrid(df, row ='Pclass', hue = 'Survived')
g.map(plt.scatter, 'Age', 'Fare', alpha =0.6)

